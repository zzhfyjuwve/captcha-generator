@using CaptchaGenerator.Models.Captcha

@model CaptchaViewModel

@{
    ViewBag.Title = "Starten";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-horizontal">
        @if (TempData.ContainsKey("ShowCaptcha"))
        {
            // TempData tut nicht immer was man vermutet...
            TempData.Remove("ShowCaptcha");

            <hr />

            <img src="@Url.RouteUrl("CaptchaImage")" alt="Captcha" />

            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.Solution, new { @class = "control-label col-md-2 solution" })
                <div class="col-md-10 solution">
                    @Html.EditorFor(model => model.Solution, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-10 solution">
                    @Html.ValidationMessageFor(model => model.Solution, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Settings.FontName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Settings.FontName, Model.FontNames, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Settings.FontSize, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.Settings.FontSize, new { htmlAttributes = new { @class = "form-control" } })
                    <div class="input-group-addon">px</div>
                </div>
                @Html.ValidationMessageFor(model => model.Settings.FontSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Settings.Color, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* Neu in 5.1 *@
                @Html.EnumDropDownListFor(model => model.Settings.Color, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    @Html.ActionLink("Reset", "Reset", null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Zur Galerie", string.Empty, "Gallery")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
